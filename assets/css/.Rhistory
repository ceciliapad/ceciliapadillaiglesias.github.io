data$CoreNumber <- data$Core_COUNT
data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$Technology_COUNT + data$RT_COUNT
#data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$RT_COUNT
data$RetouchFreq <- data$Retouch / data$ArtefactNumber
data$RetouchCore <- data$Retouch / data$Core_COUNT
data$RetouchFreqTools <- data$Retouch / (data$Core_COUNT + data$LCT_COUNT + + data$Technology_COUNT + data$Other_COUNT + data$RT_COUNT)
data[data == Inf] <- NA
# Remove assemblages without count data
data <- subset(data, data$ArtefactNumber > 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MetBrewer)
library(patchwork)
library(car)
# Helper function for dynamic color generation
get_juarez_colors <- function(n) {
if (n <= length(met.brewer("Juarez"))) {
return(met.brewer("Juarez")[1:n])
} else {
return(colorRampPalette(met.brewer("Juarez"))(n))
}
}
data <- read.csv("Reordered_Subset_of_MSA_Data.csv")
data$Retouch <- data$RT_COUNT
data$ArtefactNumber <- data$Total_TOOL_COUNT
data$CoreNumber <- data$Core_COUNT
data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$Technology_COUNT + data$RT_COUNT
#data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$RT_COUNT
data$RetouchFreq <- data$Retouch / data$ArtefactNumber
data$RetouchCore <- data$Retouch / data$Core_COUNT
data$RetouchFreqTools <- data$Retouch / (data$Core_COUNT + data$LCT_COUNT + + data$Technology_COUNT + data$Other_COUNT + data$RT_COUNT)
data[data == Inf] <- NA
# Remove assemblages without count data
data <- subset(data, data$ArtefactNumber > 1)
# Calculate percentiles
artefact_numbers <- (data$ArtefactNumber)
bottom_1_percent <- quantile(artefact_numbers, 0.02)
bottom_2_percent <- quantile(artefact_numbers, 0.02)
bottom_5_percent <- quantile(artefact_numbers, 0.05)
bottom_10_percent <- quantile(artefact_numbers, 0.10)
# Display the results
#cat("Bottom 2% value:", bottom_2_percent, "\n")
#cat("Bottom 5% value:", bottom_5_percent, "\n")
cat("Bottom 10% value:", bottom_10_percent, "\n")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MetBrewer)
library(patchwork)
library(car)
# Helper function for dynamic color generation
get_juarez_colors <- function(n) {
if (n <= length(met.brewer("Juarez"))) {
return(met.brewer("Juarez")[1:n])
} else {
return(colorRampPalette(met.brewer("Juarez"))(n))
}
}
data <- read.csv("Reordered_Subset_of_MSA_Data.csv")
data$Retouch <- data$RT_COUNT
data$ArtefactNumber <- data$Total_TOOL_COUNT
data$CoreNumber <- data$Core_COUNT
data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$Technology_COUNT + data$RT_COUNT
#data$ToolNumber <- data$Core_COUNT + data$LCT_COUNT + data$Other_COUNT + data$RT_COUNT
data$RetouchFreq <- data$Retouch / data$ArtefactNumber
data$RetouchCore <- data$Retouch / data$Core_COUNT
data$RetouchFreqTools <- data$Retouch / (data$Core_COUNT + data$LCT_COUNT + + data$Technology_COUNT + data$Other_COUNT + data$RT_COUNT)
data[data == Inf] <- NA
# Remove assemblages without count data
data <- subset(data, data$ArtefactNumber > 1)
# Calculate percentiles
artefact_numbers <- (data$ArtefactNumber)
bottom_1_percent <- quantile(artefact_numbers, 0.02)
bottom_2_percent <- quantile(artefact_numbers, 0.02)
bottom_5_percent <- quantile(artefact_numbers, 0.05)
bottom_10_percent <- quantile(artefact_numbers, 0.10)
# Display the results
#cat("Bottom 2% value:", bottom_2_percent, "\n")
#cat("Bottom 5% value:", bottom_5_percent, "\n")
cat("Bottom 10% value:", bottom_10_percent, "\n")
data <- subset(data, data$ArtefactNumber > 35)
# Log all the variables
data$Retouch <- data$Retouch
data$ArtefactNumber <- log(data$ArtefactNumber)
data$CoreNumber <- log(data$CoreNumber)
data$ToolNumber <- log(data$ToolNumber)
data$RetouchFreq <- log(data$RetouchFreq)
data$RetouchCore <- log(data$RetouchCore)
data$RetouchFreqTools <- log(data$RetouchFreqTools)
data[data == -Inf] <- NA
# Define the tool typologies and retouched tools
tool_typologies <- c(
"Bipolar_Tech", "Blade_Tech", "C.D_Tech", "Levallois_Flake_Tech", "Levallois_Blade_Tech",
"Levallois_Point_Tech", "Platform_Tech", "Point_Tech", "Backed_Microliths", "RT_Bifacial",
"Borer", "Burin", "Denticulate", "Notch", "Scraper", "Core_Tools"
)
reduction_technologies <- c(
"Bipolar_Tech", "Blade_Tech", "C.D_Tech", "Levallois_Flake_Tech", "Levallois_Blade_Tech",
"Levallois_Point_Tech", "Platform_Tech", "Point_Tech"
)
retouched_tools <- c(
"Backed_Microliths", "RT_Bifacial", "Borer", "Burin", "Denticulate", "Notch", "Scraper"
)
# Add the TechTypes column
data$TechTypes <- apply(data, 1, function(row) {
# Count the number of unique Tech types represented
sum(as.numeric(row[reduction_technologies]) > 0, na.rm = TRUE)
})
# Calculate Menhinick's Index (we do it only for retouched tools)
data$Menhinicks_Index <- apply(data, 1, function(row) {
# Count of unique Tech types represented (count of Tech types > 0)
total_tool_types <- sum(as.numeric(row[retouched_tools]) > 0, na.rm = TRUE)
# Total quantity of retouched tools
total_retouched_tools <- as.numeric(row["Retouch"])
# Menhinick's Index calculation
if (total_retouched_tools > 0) {
return(total_tool_types / sqrt(total_retouched_tools))
} else {
return(0)
}
})
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = Est.DISMOV, y = RetouchFreqTools, color = JB.Industry)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$JB.Industry)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised/retouch_vs_DISMOV.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted NOMOV
ggplot(data, aes(x = Est.NOMOV, y = RetouchFreqTools, color = JB.Industry)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted NOMOV",
x = "Predicted NOMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$JB.Industry)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised/retouch_vs_NOMOV.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted AOD
ggplot(data, aes(x = Est.AOD, y = RetouchFreqTools, color = JB.Industry)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted AOD",
x = "Predicted AOD",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
# add regression line in gray
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$JB.Industry)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised/retouch_vs_AOD.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MetBrewer)
library(patchwork)
library(car)
library(dplyr)
# Helper function for dynamic color generation
get_juarez_colors <- function(n) {
if (n <= length(met.brewer("Juarez"))) {
return(met.brewer("Juarez")[1:n])
} else {
return(colorRampPalette(met.brewer("Juarez"))(n))
}
}
data <- read.csv("ROAD_DATA_predictions_20250314.csv")
data$Retouch <- data$RT_count
data$ArtefactNumber <- data$Blank_count + data$Core_count + data$LCT_count + data$Other_count + data$RT_count
data$CoreNumber <- data$Core_count
data$ToolNumber <- data$Core_count + data$LCT_count + data$RT_count
#data$ToolNumber <- data$Core_count + data$LCT_count + data$RT_count + data$Other_count
data$RetouchFreq <- data$Retouch / data$ArtefactNumber
data$RetouchCore <- data$Retouch / data$Core_count
data$RetouchFreqTools <- data$Retouch / data$ToolNumber
data[data == Inf] <- NA
# Remove assemblages without count data
data <- subset(data, data$ArtefactNumber > 1)
# Calculate percentiles
artefact_numbers <- (data$ArtefactNumber)
bottom_1_percent <- quantile(artefact_numbers, 0.02)
bottom_2_percent <- quantile(artefact_numbers, 0.02)
bottom_5_percent <- quantile(artefact_numbers, 0.05)
bottom_10_percent <- quantile(artefact_numbers, 0.10)
# Display the results
#cat("Bottom 2% value:", bottom_2_percent, "\n")
#cat("Bottom 5% value:", bottom_5_percent, "\n")
cat("Bottom 10% value:", bottom_10_percent, "\n")
#data <- subset(data, data$ArtefactNumber >= 8)
# Log all the variables
data$Retouch <- data$Retouch
data$ArtefactNumber <- log(data$ArtefactNumber)
data$CoreNumber <- log(data$CoreNumber)
data$ToolNumber <- log(data$ToolNumber)
data$RetouchFreq <- log(data$RetouchFreq)
data$RetouchCore <- log(data$RetouchCore)
data$RetouchFreqTools <- log(data$RetouchFreqTools)
data[data == -Inf] <- NA
# Subset one row per Locality for each Age_mean
# subset_data <- data %>%
#   group_by(Locality, Age_mean) %>%
#   slice(1) %>%  # Selects the first row in each group
#   ungroup()
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_DISMOV_allartefacts.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted NOMOV
ggplot(data, aes(x = NOMOV, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted NOMOV",
x = "Predicted NOMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_NOMOV_allartefacts.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted AOD
ggplot(data, aes(x = AOD, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted AOD",
x = "Predicted AOD",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
# add regression line in gray
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_AOD_allartefacts.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_DISMOV_allartefacts_seplines.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted NOMOV
ggplot(data, aes(x = NOMOV, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted NOMOV",
x = "Predicted NOMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_NOMOV_allartefacts_seplines.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted AOD
ggplot(data, aes(x = AOD, y = RetouchFreq, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted AOD",
x = "Predicted AOD",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_AOD_allartefacts_seplines.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_DISMOV_cores.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted NOMOV
ggplot(data, aes(x = NOMOV, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted NOMOV",
x = "Predicted NOMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_NOMOV_cores.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted AOD
ggplot(data, aes(x = AOD, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted AOD",
x = "Predicted AOD",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
# add regression line in gray
geom_smooth(method = "lm", se = FALSE, color = "darkgray") +
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),   # Larger axis titles
axis.text = element_text(size = 12),    # Larger axis tick labels
legend.title = element_text(size = 14), # Larger legend title
legend.text = element_text(size = 12)   # Larger legend text
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_AOD_cores.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted DISMOV
ggplot(data, aes(x = DISMOV, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted DISMOV",
x = "Predicted DISMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_DISMOV_cores_seplines.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted NOMOV
ggplot(data, aes(x = NOMOV, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted NOMOV",
x = "Predicted NOMOV",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_NOMOV_cores_seplines.png", width = 8, height = 6)
# Retouch Frequency vs. Predicted AOD
ggplot(data, aes(x = AOD, y = RetouchCore, color = Subcontinent)) +
geom_point(size = 3) +
labs(
title = "Retouch Frequency vs. Predicted AOD",
x = "Predicted AOD",
y = "Frequency of Retouch",
color = "Industry"
) +
theme_minimal() +
geom_smooth(aes(color = Subcontinent), method = "lm", se = FALSE) +  # Separate regression lines
scale_color_manual(values = get_juarez_colors(length(unique(data$Subcontinent)))) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
ggsave("plots_counts_normalised_ROAD/retouch_vs_AOD_cores_seplines.png", width = 8, height = 6)
